apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}-frontend
  labels:
    app: {{ .Values.ingress.service }}-frontend
    chart: {{ .Chart.Name }}
  annotations:
    argocd.argoproj.io/sync-wave: "3"
spec:
  replicas: 0 #2 #should survive a node failure and allow for rolling deployments
  selector:
    matchLabels:
      app: {{ .Values.ingress.service }}-frontend
      release: {{ .Release.Name }}
      component: frontend
  template:
    metadata:
      labels:
        app: {{ .Values.ingress.service }}-frontend
        release: {{ .Release.Name }}
        component: frontend
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - {{ .Values.ingress.service }}-frontend
              topologyKey: kubernetes.io/hostname
      containers:
        - name: frontend
          image: {{ .Values.frontend.image }}:{{ .Values.frontend.version }}
          imagePullPolicy: Always
          ports:
            - containerPort: {{ .Values.frontend.ports.port }}
          readinessProbe:
            httpGet:
              path: {{ .Values.frontend.readinessProbe.path }}
              port: {{ .Values.frontend.ports.targetPort }}
            initialDelaySeconds: {{ .Values.frontend.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.frontend.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.frontend.readinessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.frontend.readinessProbe.failureThreshold }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.ingress.service }}-frontend
spec:
  selector:
    app: {{ .Values.ingress.service }}-frontend
  ports:
    - protocol: TCP
      port: {{ .Values.frontend.ports.port }}
      targetPort: {{ .Values.frontend.ports.targetPort }}
