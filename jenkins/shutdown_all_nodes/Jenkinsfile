pipeline {
    agent any

    stages {
        stage('node01') {
            steps {
                script {
                    def nodeIP = "192.168.1.211"
                    // Load the private key from the credentials using the 'withCredentials' step
                    withCredentials([sshUserPrivateKey(credentialsId: 'jenkins-private-key', keyFileVariable: 'SSH_PRIVATE_KEY')]) {
                        // Connect to the SSH agent using the loaded private key
                        sshagent(credentials: ['jenkins-private-key']) {
                            // Execute the shutdown command on the remote node
                            sh "ssh -o StrictHostKeyChecking=no -i ${SSH_PRIVATE_KEY} root@${nodeIP} 'shutdown'"
                        }
                    }
                }
            }
        }
        stage('node02') {
            steps {
                script {
                    def nodeIP = "192.168.1.212"
                    // Load the private key from the credentials using the 'withCredentials' step
                    withCredentials([sshUserPrivateKey(credentialsId: 'jenkins-private-key', keyFileVariable: 'SSH_PRIVATE_KEY')]) {
                        // Connect to the SSH agent using the loaded private key
                        sshagent(credentials: ['jenkins-private-key']) {
                            // Execute the shutdown command on the remote node
                            sh "ssh -o StrictHostKeyChecking=no -i ${SSH_PRIVATE_KEY} root@${nodeIP} 'shutdown'"
                        }
                    }
                }
            }
        }
        stage('node03') {
            steps {
                script {
                    def nodeIP = "192.168.1.213"
                    // Load the private key from the credentials using the 'withCredentials' step
                    withCredentials([sshUserPrivateKey(credentialsId: 'jenkins-private-key', keyFileVariable: 'SSH_PRIVATE_KEY')]) {
                        // Connect to the SSH agent using the loaded private key
                        sshagent(credentials: ['jenkins-private-key']) {
                            // Execute the shutdown command on the remote node
                            sh "ssh -o StrictHostKeyChecking=no -i ${SSH_PRIVATE_KEY} root@${nodeIP} 'shutdown'"
                        }
                    }
                }
            }
        }
        stage('nfs01') {
            steps {
                script {
                    def nodeIP = "192.168.1.210"
                    // Load the private key from the credentials using the 'withCredentials' step
                    withCredentials([sshUserPrivateKey(credentialsId: 'jenkins-private-key', keyFileVariable: 'SSH_PRIVATE_KEY')]) {
                        // Connect to the SSH agent using the loaded private key
                        sshagent(credentials: ['jenkins-private-key']) {
                            // Execute the shutdown command on the remote node
                            sh "ssh -o StrictHostKeyChecking=no -i ${SSH_PRIVATE_KEY} root@${nodeIP} 'shutdown'"
                        }
                    }
                }
            }
        }
    }
    post {
        always {
            script {
                def title = "Pipeline Status: ${currentBuild.result}"
                def message
                
                withCredentials([usernamePassword(credentialsId: 'pushover', usernameVariable: 'PUSHOVER_USER_KEY', passwordVariable: 'PUSHOVER_API_TOKEN')]) {
                    if (currentBuild.resultIsBetterOrEqualTo('SUCCESS')) {
                        message = "All nodes successfully shutdown: ${currentBuild.fullDisplayName}"
                    } else {
                        message = "Shutting down failed: ${currentBuild.fullDisplayName}"
                    }
                    
                    // Pushover API URL
                    def pushoverUrl = "https://api.pushover.net/1/messages.json"
                    
                    sh "curl -s -F 'token=$PUSHOVER_API_TOKEN' -F 'user=$PUSHOVER_USER_KEY' -F 'message=$message' -F 'title=$title' $pushoverUrl"
                }
            }
        }
    }
}

