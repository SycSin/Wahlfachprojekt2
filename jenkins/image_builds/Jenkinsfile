pipeline {
    agent any

    stages {
        stage('Clone Repository') {
            steps {
                checkout([$class: 'GitSCM',
                          branches: [[name: '*/main']],
                          userRemoteConfigs: [[url: 'https://github.com/SycSin/MyRecipes.git']]
                ])
            }
        }
        stage('Backend') {
            steps {
                dir('backend') {
                    script {
                        def backendImage = docker.build("registry:5000/myrecipes-backend:${env.BUILD_NUMBER}")
                        sh "curl -v http://registry:5000/v2/_catalog"
                        docker.withRegistry('http://registry:5000', '') {
                            backendImage.push()
                        }
                    }
                }
            }
        }
        stage('Frontend') {
            steps {
                dir('frontend') {
                    script {
                        def frontendImage = docker.build("registry:5000/myrecipes-frontend:${env.BUILD_NUMBER}")
                        docker.withRegistry('http://registry:5000', '') {
                            frontendImage.push()
                        }
                    }
                }
            }
        }
    }

    post {
        always {
            cleanWs()
        }
    }
}