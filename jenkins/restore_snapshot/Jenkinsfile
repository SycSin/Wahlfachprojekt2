import jenkins.model.Jenkins
import com.cloudbees.jenkins.plugins.sshcredentials.impl.BasicSSHUserPrivateKey

pipeline {
    agent any
    
    parameters {
        choice(name: 'WORKER', choices: ['worker01', 'worker02', 'worker03'], description: 'Select a worker')
    }
    
    environment {
        SSH_HOST = '192.168.1.210'
        SSH_COMMAND = "rsync -a --delete /mnt/ssd/nfs/worker-base-template/ /mnt/ssd/nfs/${params.WORKER}"
    }
    
    stages {
        stage('SSH and Execute Rsync') {
            steps {
                script {
                    // Get the Jenkins instance to retrieve credentials
                    def jenkins = Jenkins.getInstance()
                    
                    // Get the credentials by ID
                    def credentials = jenkins.getDescriptor("com.cloudbees.jenkins.plugins.sshcredentials.impl.BasicSSHUserPrivateKey").newInstance()
                    credentials.setPrivateKeySource(new BasicSSHUserPrivateKey.DirectEntryPrivateKeySource(decodedPrivateKey(), null))
                    
                    // Start the SSH agent and run the rsync command
                    sshagent(['sshagent']) {
                        sh "ssh -o StrictHostKeyChecking=no -i ${credentials.getPrivateKeys().get(0).getFileOnMaster().getAbsolutePath()} root@${SSH_HOST} '$SSH_COMMAND'"
                    }
                }
            }
        }
    }
}

def decodedPrivateKey() {
    // Base64 decode the private key
    return new String(credentials('jenkins-private-key-base64').toByteArray(), 'UTF-8').trim()
}
